// const express = require('express')
// // making a router
// const router = express.Router()
// // importing Fruit model to access database
// const Item = require('../models/items')

// // DELETE - Delete
// router.delete('/:id', (req, res) => {
//     const itemId = req.params.id

//     Fruit.findByIdAndRemove(itemId)
//         .then(item => {
//             res.redirect('/item')
//         })
//         .catch(err => {
//             res.json(err)
//         })
// })

// // GET route for displaying an update form
// router.get('/:id/edit', (req, res) => {
//     const itemId = req.params.id

//     Item.findById(itemId)
//         .then(item => {
//             res.render('items/edit', { item })
//         })
//         .catch(err => {
//             res.json(err)
//         })
// })

// // PUT - Update
// // localhost:3000/fruits/:id
// router.put('/:id', (req, res) => {
//     const itemId = req.params.id

//     req.body.sex = req.body.sex === 'on' ? true : false

//     Fruit.findByIdAndUpdate(itemId, req.body, { new: true })
//         .then(item => {
//             res.redirect(`/items/${item._id}`)
//         })
//         .catch(err => {
//             res.json(err)
//         })
// })

// // GET route for displaying my form for create
// router.get('/new', (req, res) => {
//     const username = req.session.username
//     const loggedIn = req.session.loggedIn
//     res.render('items/new', { username, loggedIn })
// })

// // POST - Create
// router.post('/', (req, res) => {
//     req.body.sex = req.body.sex === 'on' ? true : false

//     // now that we have user specific fruits, we'll add a username upon creation
//     // remember, when we login, we saved the username to the session object
//     // using the ._id to set the owner field
    
//     req.body.owner = req.session.userId

//     console.log(req.body)
//     Item.create(req.body)
//         .then(item => {
//             console.log(item)
//             // res.json(fruit)
//             res.redirect('/items')
//         })
//         .catch(err => {
//             res.json(err)
//         })
// })

// // GET - Index
// // localhost:3000/fruits
// router.get('/', (req, res) => {
//     // mongoose to find all fruits
//     Item.find({})
//     // return fruits as json
//         .then(items => {
//             // res.json(fruit)
//             res.render('items/listings', { item })
//         })
//         .catch(err => {
//             res.json(err)
//         })
// })

// router.get('/mine', (req, res) => {
//     // find the fruits associated with the logged in user
//     Item.find({ owner: req.session.userId })
//         .then(items => {
//             res.render('items/index', { items })
//         })
//         .catch(error => {
//             console.log(error)
//             res.json({ error })
//         })
// })

// // seed route --> has been moved to models/seed.js
// // insert many items into our database with just going to this route
// // localhost:3000/fruits/seed
// // router.get('/seed', (req, res) => {
// //     // starting data
// //     const startFruits = [
// //     { name: "Orange", color: "orange", readyToEat: false },
// //     { name: "Grape", color: "purple", readyToEat: false },
// //     { name: "Banana", color: "orange", readyToEat: false },
// //     { name: "Strawberry", color: "red", readyToEat: false },
// //     { name: "Coconut", color: "brown", readyToEat: false },
// //   ]
// //   // delete if we have fruits
// //   Fruit.deleteMany({})
// // 		// insert data
// // 		.then(() => {
// //             Fruit.create(startFruits)
// //             // return this data as json to view
// //             .then(data => {
// //                 res.json(data)
// //             })
// //             // .catch(err => console.error(err))
// // 		    .catch(console.error)
// //         })
// // })

// // GET - Show
// // localhost:3000/fruits/:id <- change with the id being passed in
// router.get('/:id', (req, res) => {
//     const itemId = req.params.id

//     Item.findById(itemId)
//     // populate our User models fields
//     // comment has an author field and that is the ref to the User model
//     // always going to be a string of the value you want to populate
//     // this also has to be anohter model 
//         .populate('comments.author')
//         // send back some json
//         .then(item => {
//             // res.json(fruit)
//             const userId = req.session.userId
//             const username = req.session.username
//             res.render('items/show', { item, userId, username })
//         })
//         .catch(err => {
//             res.json(err)
//         })
// })

// module.exports = router