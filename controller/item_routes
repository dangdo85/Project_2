const express = require('express')

// importing item model to access database
const Item = require('../models/item')
const Pet = require('../models/pet')

// making a router
const router = express.Router()

// DELETE - Delete
router.delete('/:id', (req, res) => {
    const itemId = req.params.id
    const loggedIn = req.session.loggedIn
    if (req.session.loggedIn) {
    Item.findByIdAndRemove(itemId)
        .then(item => {
            res.redirect('/adopt-a-paw/items/index', { loggedIn})
        })
        .catch(err => {
            res.json(err)
        })
    } else {
        res.redirect("/users/login")
    }
})

// GET route for displaying an update form
router.get('/:id/edit', (req, res) => {
    // console.log('edit route here')
    const itemId = req.params.id
    const loggedIn = req.session.loggedIn
    if (req.session.loggedIn) {
        Item.findById(itemId)
        .then(item => {
            res.render('items/edit', { item, loggedIn })
        })
        .catch(err => {
            res.json(err)
        })
    } else {
        res.redirect("/users/login")
    }
})

// PUT - Update
// localhost:3000/adopt-a-paw/items/:id
router.put('/:id', (req, res) => {
    const itemId = req.params.id
    // console.log('put route here')
    Item.findByIdAndUpdate(itemId, req.body, { new: true })
        .then(item => {
            res.redirect(`${item._id}`)
        })
        .catch(err => {
            res.json(err)
        })
})

// GET route for displaying my form for create
router.get('/new', (req, res) => {
    // res.send('new page in route')
    
    const username = req.session.username
    const loggedIn = req.session.loggedIn
    if (req.session.loggedIn) {
    res.render('items/new', { username, loggedIn })
    } else {
        res.redirect("/users/login")
    }
})

// POST - Create
router.post('/index', (req, res) => {
    const loggedIn = req.session.loggedIn
    // now that we have user specific items, we'll add a username upon creation
    // remember, when we login, we saved the username to the session object
    // using the ._id to set the owner field
    
    req.body.owner = req.session.userId

    console.log(req.body)
    if (req.session.loggedIn) {
    Item.create(req.body)
        .then(item => {
            console.log(item)
            res.redirect('/adopt-a-paw/items/index')
        })
        .catch(err => {
            res.json(err)
        })
     } else {
        res.redirect("/users/login")
     }
})

// GET - Index
// localhost:3000/adopt-a-paw/items/index
router.get('/index', (req, res) => {
    // mongoose to find all items
    const loggedIn = req.session.loggedIn
    Item.find({})
    // // return items as json
        .then(items => {
    // res.send('item index from routes')
            res.render('items/index', { items, loggedIn })
        })
        .catch(err => {
            res.json(err)
        })
})

// my_account route is in user_routes


// GET - Show
// localhost:3000/adopt-a-paw/items/:id <- change with the id being passed in
router.get('/:id', (req, res) => {
    const itemId = req.params.id
    const loggedIn = req.session.loggedIn
    Item.findById(itemId)
    // populate our User models fields
    // comment has an author field and that is the ref to the User model
    // always going to be a string of the value you want to populate
    // this also has to be anohter model 
    // .populate('items.author')
        // send back some json
        .then(item => {
            const userId = req.session.userId
            const username = req.session.username
            res.render('items/show', { item, userId, username, loggedIn })
        })
        .catch(err => {
            res.json(err)
        })
})

module.exports = router